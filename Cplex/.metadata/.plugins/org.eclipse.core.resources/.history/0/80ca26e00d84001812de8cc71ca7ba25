/*********************************************
 * OPL 12.8.0.0 Model
 * Author: Faiza
 * Creation Date: Jul 9, 2018 at 8:27:37 PM
 *********************************************/
 
int numOfWar = ...; 
int numOfSup = ...; 
int numOfProd = ...; 
int days = ...;


range J = 1..numOfWar; 
range I = 1..numOfSup;
range K = 1..numOfProd; 
int C[J] = ...; 
{int} T = ...; 
float S[I][K] = ...; 
float H[J][K] = ...; 
 
 //Decision Variables 
 dvar int Y[I][K] in 0..1; //if supplier i is supplying product k 
 dvar int X[I][J][K][T]; //Units leaving supplier 
 dvar int Inv[J][K][T];
 dvar int Dbar[J][K][T];
 
 //Objective Function 
 minimize
 	sum(i in I, j in J, k in K, t in T)
 	  S[i][k] * X[i][j][k][t] +
 	sum(j in J, k in K, t in T)
 	  H[j][k] * Inv[j][k][t];

//Constraints
subject to{

  forall( j in J, k in K, t in T)
    productFlow:
    	sum(i in I) X[i][j][k][t] + Inv[j][k][t] == Dbar[j][k][t] + Inv[j][k][t];
  
  forall(j in J, t in T)
    plantCapacity:
    	sum(k in K) Inv[j][k][t] <= C[j];
    
  forall(k in K)
    supplierTwoConstraint:
    	sum(t in T, j in J) X[2][j][k][t] >= 200 * Y[2][k];
    	
  forall(k in K)
    supplierThreeConstraint:
    	sum(t in T, j in J) X[3][j][k][t] >= 400 * Y[3][k];
    	
   forall(k in K)
    supplierOneConstraint:
    	sum(t in T, j in J) X[1][j][k][t] >= 500 * Y[1][k];
    	
  nonNegativityOne:
  forall(i in I, j in J, k in K, t in T)
  	X[i][j][k][t] >= 0;
  	
  nonNegativityTwo:
  forall(j in J, k in K, t in T)
  	Inv[j][k][t] >= 0;
  
}
 	  
